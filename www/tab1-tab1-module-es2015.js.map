{"version":3,"sources":["./src/app/tab1/tab1.page.html","./src/app/tab1/tab1.module.ts","./src/app/tab1/tab1.page.scss","./src/app/tab1/tab1.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,oxBAAqtB,sBAAsB,sQAAsQ,uBAAuB,wRAAwR,0BAA0B,kF;;;;;;;;;;;;;;;;;;;;;;ACA5xC;AACE;AACN;AACM;AACF;AACN;AAWvC,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAG;AAAjB,cAAc;IAT1B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,0DAAW;YACX,4DAAY;YACZ,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mDAAQ,EAAE,CAAC,CAAC;SAC3D;QACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;KACzB,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;AChB3B;AAAe,kFAAmB,eAAe,iBAAiB,uCAAuC,kCAAkC,GAAG,6CAA6C,2zB;;;;;;;;;;;;;;;;;;;;;ACAvI;AACJ;AACd;AACe;AAOjD,IAAa,QAAQ,GAArB,MAAa,QAAQ;IAQnB,YAAoB,YAA0B,EAAS,KAAqB;QAAxD,iBAAY,GAAZ,YAAY,CAAc;QAAS,UAAK,GAAL,KAAK,CAAgB;QAJ5E,SAAI,GAAQ,IAAI,CAAC;QAMf,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,SAAS,CACrC,CAAC,IAAI,EAAC,EAAE;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,EAED,CAAC,KAAK,EAAC,EAAE;YACJ,IAAI,CAAC,cAAc,EAAE,CAAC;QAC3B,CAAC,CAAC;IAGL,CAAC;IASM,cAAc;;YAMZ,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBAE3B,OAAO,EAAE,oCAAoC;gBAC7C,QAAQ,EAAE,KAAK;aACzB,CAAC,CAAC;YAEJ,MAAM,CAAC,OAAO,EAAE,CAAC;QAKzB,CAAC;KAAA;IAID,cAAc;QAKZ,IAAI,CAAC,IAAI,GAAC,IAAI,8CAAK,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAC;YAK9C,IAAI,EAAC,KAAK;YACV,IAAI,EAAC;gBAID,MAAM,EAAC,CAAC,KAAK,EAAC,MAAM,EAAC,WAAW,CAAC;gBACjC,QAAQ,EAAC,CAAC;wBAEN,KAAK,EAAC,OAAO;wBACb,IAAI,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;wBAC3D,eAAe,EAAC,CAAC,YAAY,EAAC,KAAK,EAAC,aAAa,CAAC;wBAClD,WAAW,EAAC,CAAC,iBAAiB,CAAC;wBAC/B,WAAW,EAAC,CAAC;qBAChB;iBACA;aAGH;YACD,OAAO,EAAC;gBAGF,MAAM,EAAC,EAGN;aAEN;SAGF,CAAC;IAGJ,CAAC;CAGF;;YAzFmC,2DAAY;YAAe,8DAAe;;AANvC;IAApC,+DAAS,CAAC,SAAS,EAAC,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC;;yCAAS;AAFlC,QAAQ;IALpB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,sMAA6B;;KAE9B,CAAC;2EASkC,2DAAY,EAAe,8DAAe;GARjE,QAAQ,CAiGpB;AAjGoB","file":"tab1-tab1-module-es2015.js","sourcesContent":["export default \"\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n\\r\\n\\r\\n<div class=\\\"svg\\\">\\r\\n    <br>\\r\\n    <ion-title padding color=\\\"light\\\"> Anti</ion-title>\\r\\n    <ion-title padding  color=\\\"light\\\"> <b>Covid-19</b> </ion-title>\\r\\n    <br>\\r\\n     <ion-buttons slot=\\\"end\\\">\\r\\n\\r\\n           <ion-menu-button color=\\\"light\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n</div>\\r\\n \\r\\n \\r\\n  <br>\\r\\n  <h1 size=\\\"large\\\"  style=\\\"margin-left: 25%\\\"><b>World Statistics</b></h1>\\r\\n\\r\\n\\r\\n\\r\\n  <canvas #mychart width=\\\"400\\\" height=\\\"400\\\">  </canvas>\\r\\n  \\r\\n\\r\\n      <ion-text padding color=\\\"primary\\\"  >\\r\\n\\r\\n          <h1  style=\\\"margin-left: 5%\\\" > <b> Cas confirm√©s </b> </h1>\\r\\n          <h5  style=\\\"margin-left: 5%\\\">{{info?.cases | number}}  Personnes</h5>\\r\\n        \\r\\n      </ion-text>\\r\\n\\r\\n\\r\\n\\r\\n      <ion-text padding color=\\\"danger\\\"  style=\\\"margin-left: 5%\\\" >\\r\\n\\r\\n          <h1  style=\\\"margin-left: 5%\\\"> <b> Nombre de Morts </b> </h1>\\r\\n          <h5   style=\\\"margin-left: 5%\\\">{{info?.deaths | number}}  personnes </h5>\\r\\n        \\r\\n      </ion-text>\\r\\n \\r\\n\\r\\n \\r\\n   \\r\\n\\r\\n    <ion-text padding color=\\\"success\\\"  style=\\\"margin-left: 10%\\\" >\\r\\n\\r\\n          <h1  style=\\\"margin-left: 5%\\\" > <b>Nombre de guerrisons </b> </h1>\\r\\n          <h5  style=\\\"margin-left: 5%\\\">{{info?.recovered | number}} personnes</h5> \\r\\n        \\r\\n      </ion-text>\\r\\n\\r\\n\\r\\n  \\r\\n</ion-content>\"","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Tab1Page } from './tab1.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild([{ path: '', component: Tab1Page }])\r\n  ],\r\n  declarations: [Tab1Page]\r\n})\r\nexport class Tab1PageModule {}\r\n","export default \"ion-content .svg {\\n  width: 50%;\\n  heigth: 10vh;\\n  border-bottom-right-radius: 2000px;\\n  background-color: forestgreen;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMS9DOlxcVXNlcnNcXFBDLVdJTExZXFxpb25pY193YXlcXENPVklELTE5LWFwcC9zcmNcXGFwcFxcdGFiMVxcdGFiMS5wYWdlLnNjc3MiLCJzcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0k7RUFFRyxVQUFBO0VBQ0EsWUFBQTtFQUNBLGtDQUFBO0VBQ0EsNkJBQUE7QUNIUCIsImZpbGUiOiJzcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudHtcclxuICBcclxuIFxyXG4gICAgLnN2Z3tcclxuXHJcbiAgICAgICB3aWR0aDo1MCU7XHJcbiAgICAgICBoZWlndGg6MTB2aDtcclxuICAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjIwMDBweDtcclxuICAgICAgIGJhY2tncm91bmQtY29sb3I6Zm9yZXN0Z3JlZW47XHJcblxyXG5cclxuXHJcbiAgICAgIH1cclxuXHJcbn0iLCJpb24tY29udGVudCAuc3ZnIHtcbiAgd2lkdGg6IDUwJTtcbiAgaGVpZ3RoOiAxMHZoO1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMjAwMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBmb3Jlc3RncmVlbjtcbn0iXX0= */\"","import { Component,ViewChild } from '@angular/core';\r\nimport { CovidService } from '../covid.service';\r\nimport  { Chart } from 'chart.js';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-tab1',\r\n  templateUrl: 'tab1.page.html',\r\n  styleUrls: ['tab1.page.scss']\r\n})\r\nexport class Tab1Page {\r\n\r\n  @ViewChild('mychart',{static:false}) mychart;\r\n\r\n  info: any = null;\r\n  bars:any;\r\n\r\n\r\n  constructor(private covidService: CovidService,private toast:ToastController) { \r\n\r\n    this.covidService.getAll().subscribe(\r\n   (data)=>{\r\n      this.info = data;\r\n      this.createBarChart();\r\n      console.log(this.info);\r\n    },\r\n    \r\n    (error)=>{\r\n         this.presentMyToast();\r\n    })\r\n\r\n\r\n }\r\n  \r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  async presentMyToast(){\r\n\r\n\r\n\r\n     \r\n\r\n          const toasts = await this.toast.create({\r\n                      \r\n                      message: 'Veuillez verifier votre connection',\r\n                      duration: 10000,\r\n           });\r\n                    \r\n          toasts.present();\r\n\r\n             \r\n\r\n\r\n  }\r\n  \r\n  \r\n\r\n  createBarChart(){\r\n\r\n \r\n\r\n\r\n    this.bars=new Chart(this.mychart.nativeElement,{\r\n   \r\n\r\n\r\n    \r\n     type:'pie',\r\n     data:{\r\n\r\n\r\n\r\n         labels:['cas','mort','guerrison'],\r\n         datasets:[{\r\n\r\n             label:'world',\r\n             data:[this.info.cases,this.info.deaths,this.info.recovered],\r\n             backgroundColor:['dodgerblue','red','forestgreen'],\r\n             borderColor:['rgba(0,0,0,0.9)'],\r\n             borderWidth:1\r\n         },\r\n         ]\r\n\r\n\r\n      },\r\n      options:{\r\n\r\n \r\n            scales:{\r\n\r\n                  \r\n            }\r\n\r\n      }\r\n\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}